<?php
#
# {{ ansible_managed }}
#


#==============================================================================
# Configuration
#==============================================================================
# LDAP
$ldap_url = "{{ ssp_ldap_server_url }}";
$ldap_starttls = false;
$ldap_binddn = "{{ ssp_ldap_binddn }}";
$ldap_bindpw = "{{ ssp_ldap_password }}";
$ldap_base = "{{ ssp_ldap_basedn }}";
$ldap_login_attribute = "uid";
$ldap_fullname_attribute = "cn";
$ldap_filter = "(&(objectClass=person)($ldap_login_attribute={login}))";

# Active Directory mode
# true: use unicodePwd as password field
# false: LDAPv3 standard behavior
$ad_mode = false;
# Force account unlock when password is changed
$ad_options['force_unlock'] = false;
# Force user change password at next login
$ad_options['force_pwd_change'] = false;
# Allow user with expired password to change password
$ad_options['change_expired_password'] = false;

# Samba mode
# true: update sambaNTpassword and sambaPwdLastSet attributes too
# false: just update the password
$samba_mode = false;
# Set password min/max age in Samba attributes
#$samba_options['min_age'] = 5;
#$samba_options['max_age'] = 45;

# Shadow options - require shadowAccount objectClass
# Update shadowLastChange
$shadow_options['update_shadowLastChange'] = false;

# Hash mechanism for password:
# SSHA
# SHA
# SMD5
# MD5
# CRYPT
# clear (the default)
# auto (will check the hash of current password)
# This option is not used with ad_mode = true
$hash = "{{ ssp_hash_type }}";

# Prefix to use for salt with CRYPT
$hash_options['crypt_salt_prefix'] = "$6$";

# Local password policy
# This is applied before directory password policy
# Minimal length
$pwd_min_length = 0;
# Maximal length
$pwd_max_length = 0;
# Minimal lower characters
$pwd_min_lower = 0;
# Minimal upper characters
$pwd_min_upper = 0;
# Minimal digit characters
$pwd_min_digit = 0;
# Minimal special characters
$pwd_min_special = 0;
# Definition of special characters
$pwd_special_chars = "^a-zA-Z0-9";
# Forbidden characters
#$pwd_forbidden_chars = "@%";
# Don't reuse the same password as currently
$pwd_no_reuse = true;
# Complexity: number of different class of character required
$pwd_complexity = 0;
# Show policy constraints message:
# always
# never
# onerror
$pwd_show_policy = "never";
# Position of password policy constraints message:
# above - the form
# below - the form
$pwd_show_policy_pos = "above";

# Who changes the password?
# Also applicable for question/answer save
# user: the user itself
# manager: the above binddn
$who_change_password = "user";

## Questions/answers
{% if ssp_enable_questions|d(false) %}
	# Use questions/answers?
	# true (default)
	# false
	$use_questions = true;

	# Answer attribute should be hidden to users!
	$answer_objectClass = "extensibleObject";
	$answer_attribute = "info";

	# Extra questions (built-in questions are in lang/$lang.inc.php)
	#$messages['questions']['ice'] = "What is your favorite ice cream flavor?";
{% else %}
	# Questions are disabled - see ssp_enable_questions
	$use_questions = false;
{% endif %}

## Token
{% if ssp_enable_tokens|d(false) %}
	# Use tokens?
	# true (default)
	# false
	$use_tokens = true;
	# Crypt tokens?
	# true (default)
	# false
	$crypt_tokens = true;
	# Token lifetime in seconds
	$token_lifetime = "{{ ssp_token_lifetime|d(300) }}";
{% else %}
	# Tokens are disabled - see ssp_enable_tokens
	$use_tokens = false;
{% endif %}

## Mail
# LDAP mail attribute
$mail_attribute = "mail";
# Who the email should come from
$mail_from = "{{ ssp_mail_from }}";
# Notify users anytime their password is changed
$notify_on_change = {{ ssp_notify_on_change }};

## SMS
{% if ssp_enable_sms|d(false) %}
	# Use sms
	$use_sms = true;
	# GSM number attribute
	$sms_attribute = "mobile";
	# Partially hide number
	$sms_partially_hide_number = true;
	# Send SMS mail to address
	$smsmailto = "{sms_attribute}@service.provider.com";
	# Subject when sending email to SMTP to SMS provider
	$smsmail_subject = "Provider code";
	# Message
	$sms_message = "{smsresetmessage} {smstoken}";

	# SMS token length
	$sms_token_length = 6;
{% else %}
	# SMS tokens are disabled - see ssp_enable_questions
	$use_sms = false;
{% endif %}

# Display help messages
$show_help = true;

# Language
$lang ="en";

# Logo
$logo = "style/ltb-logo.png";

# Debug mode
$debug = false;

# Encryption, decryption keyphrase
$keyphrase = "{{ ssp_keyphrase }}";

# Where to log password resets - Make sure apache has write permission
# By default, they are logged in Apache log
#$reset_request_log = "/var/log/self-service-password";

# Invalid characters in login
# Set at least "*()&|" to prevent LDAP injection
# If empty, only alphanumeric characters are accepted
$login_forbidden_chars = "*()&|";

## CAPTCHA
# Use Google reCAPTCHA (http://www.google.com/recaptcha)
# Go on the site to get public and private key
$use_recaptcha = false;
$recaptcha_publickey = "";
$recaptcha_privatekey = "";
# Customize theme (see http://code.google.com/intl/de-DE/apis/recaptcha/docs/customization.html)
# Examples: red, white, blackglass, clean
$recaptcha_theme = "white";
# Force HTTPS for recaptcha HTML code
$recaptcha_ssl = false;

## Default action
# change
# sendtoken
# sendsms
$default_action = "change";

## Extra messages
# They can also be defined in lang/ files
#$messages['passwordchangedextramessage'] = NULL;
#$messages['changehelpextramessage'] = NULL;

# Launch a posthook script after successful password change
#$posthook = "/usr/share/self-service-password/posthook.sh";

?>
